name: ichi.org (stage)

on:
  push:
    branches:
      - master

jobs:
  stage:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    name: Build and deploy stage
    runs-on: ubuntu-latest
    environment:
      name: stage
      url: http://ichiorg.stage.${{ github.actor }}.s3-website-us-east-1.amazonaws.com

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        npm i --force

    - name: Build website
      run: |
        echo "NODE_ENV: $NODE_ENV"
        touch .env.production
        echo GATSBY_APP_SYNC_URL=${{ secrets.APP_SYNC_URL_STAGE }} >> .env.production
        echo GATSBY_APP_SYNC_API_KEY=${{ secrets.APP_SYNC_API_KEY_STAGE }} >> .env.production
        cat .env.production
        npm run build
      env:
        GATSBY_APP_SYNC_URL: ${{ secrets.APP_SYNC_URL_STAGE }}
        GATSBY_APP_SYNC_API_KEY: ${{ secrets.APP_SYNC_API_KEY_STAGE }}

    # - name: Deploy to Azure
    #   uses: tibor19/static-website-deploy@v1
    #   with:
    #     enabled-static-website: 'true'
    #     folder: 'public'
    #     connection-string: ${{ secrets.APP_ICHI_ORG_CONNECTION_STRING_STAGE }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy static site to s3://ichiorg.stage.${{ github.actor }}
      run: aws s3 sync ./public s3://ichiorg.stage.${{ github.actor }} --delete
  prod:
    needs: stage
    name: Build and deploy prod
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://ichi.org

    steps:

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: Install dependencies
      run: |
        npm i --force

    - name: Build website
      run: |
        echo "NODE_ENV: $NODE_ENV"
        touch .env.production
        echo GATSBY_APP_SYNC_URL=${{ secrets.APP_SYNC_URL_PROD }} >> .env.production
        echo GATSBY_APP_SYNC_API_KEY=${{ secrets.APP_SYNC_API_KEY_PROD }} >> .env.production
        cat .env.production
        npm run build
      env:
        GATSBY_APP_SYNC_URL: ${{ secrets.APP_SYNC_URL_PROD }}
        GATSBY_APP_SYNC_API_KEY: ${{ secrets.APP_SYNC_API_KEY_PROD }}

    - name: Deploy to Azure
      uses: tibor19/static-website-deploy@v1
      with:
        enabled-static-website: 'true'
        folder: 'public'
        connection-string: ${{ secrets.BLOB_STORAGE_CONNECTION_STRING }}

